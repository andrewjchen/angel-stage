#! /usr/bin/env python3
# encoding: utf-8

def options(opt):
    pass

def configure(conf):
    pass

from os.path import join
def build(bld):
    allegro_libs = ['allegro', 'allegro_image', 'allegro_primitives']
    common_includes = ['.',
                       join(bld.top_dir, 'deps', 'usr', 'local', 'include'),
                       join(bld.top_dir, 'include'),
                       join(bld.top_dir, 'include', 'shared')]
    in_repo_libpath = join(bld.top_dir, 'deps', 'usr', 'local', 'lib')
    common_libpath = [in_repo_libpath]
    client_includes = common_includes + [join(bld.top_dir, 'include', 'client')]
    server_includes = common_includes + [join(bld.top_dir, 'include', 'server')]
    common_lib = ['boost_system', 'boost_thread', 'boost_chrono']
    server_lib = common_lib
    bld.stlib(
        source = bld.path.ant_glob('shared/*.cxx'),
        includes = common_includes,
        lib = common_lib,
        libpath = common_libpath,
        target = 'angel-stage-shared-lib',
        )
    bld.stlib(
        source = bld.path.ant_glob('client/*.cxx'),
        includes = client_includes,
        use = 'angel-stage-shared-lib',
        target = 'angel-stage-client-lib',
        )
    bld.program(
        source = 'client_main.cxx',
        target = 'client_main',
        includes = client_includes,
        libpath = common_libpath,
        lib = common_lib + allegro_libs,
        use = ['angel-stage-shared-lib', 'angel-stage-client-lib'],
        linkflags='-Wl,-R ' + in_repo_libpath,
        )
    bld.program(
        source = 'client_test.cxx',
        target = 'client_test',
        includes = client_includes,
        libpath = common_libpath,
        lib = common_lib + allegro_libs,
        use = ['angel-stage-shared-lib', 'angel-stage-client-lib'],
        linkflags='-Wl,-R ' + in_repo_libpath,
        )
    bld.stlib(
        source = bld.path.ant_glob('server/*.cxx'),
        includes = server_includes,
        use = 'angel-stage-shared-lib',
        target = 'angel-stage-server-lib',
        )
    bld.program(
        source = 'server_main.cxx',
        target = 'server_main',
        includes = server_includes,
        lib = server_lib,
        libpath = common_libpath,
        use = ['angel-stage-shared-lib', 'angel-stage-server-lib'],
        linkflags='-Wl,-R ' + in_repo_libpath,
        )
